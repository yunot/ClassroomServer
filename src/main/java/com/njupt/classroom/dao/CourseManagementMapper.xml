<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njupt.classroom.dao.CourseManagementMapper" >
  <resultMap id="BaseResultMap" type="com.njupt.classroom.pojo.CourseManagement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_type" property="courseType" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_time" property="courseTime" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="start_weeks" property="startWeeks" jdbcType="VARCHAR" />
    <result column="stop_weeks" property="stopWeeks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_type, course_name, course_time, course_id, start_weeks, stop_weeks
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from course_management
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course_management
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njupt.classroom.pojo.CourseManagement" >
    insert into course_management (id, course_type, course_name, course_time,
      course_id, start_weeks, stop_weeks
      )
    values (#{id,jdbcType=INTEGER}, #{courseType,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{courseTime,jdbcType=INTEGER},
      #{courseId,jdbcType=VARCHAR}, #{startWeeks,jdbcType=VARCHAR}, #{stopWeeks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njupt.classroom.pojo.CourseManagement" >
    insert into course_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseTime != null" >
        course_time,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="startWeeks != null" >
        start_weeks,
      </if>
      <if test="stopWeeks != null" >
        stop_weeks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null" >
        #{courseTime,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="startWeeks != null" >
        #{startWeeks,jdbcType=VARCHAR},
      </if>
      <if test="stopWeeks != null" >
        #{stopWeeks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.njupt.classroom.pojo.CourseManagement" >
    update course_management
    <set >
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null" >
        course_time = #{courseTime,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="startWeeks != null" >
        start_weeks = #{startWeeks,jdbcType=VARCHAR},
      </if>
      <if test="stopWeeks != null" >
        stop_weeks = #{stopWeeks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njupt.classroom.pojo.CourseManagement" >
    update course_management
    set course_type = #{courseType,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=VARCHAR},
      start_weeks = #{startWeeks,jdbcType=VARCHAR},
      stop_weeks = #{stopWeeks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectCourseByType" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from course_management where course_type = #{type,jdbcType=VARCHAR}
  </select>

</mapper>